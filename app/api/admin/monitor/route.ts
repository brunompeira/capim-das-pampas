import { NextResponse } from 'next/server';
import { getConnectionStatus } from '@/config/mongoConfig';

// GET - Monitorizar estado das conex√µes MongoDB
export async function GET() {
  try {
    const status = getConnectionStatus();
    
    return NextResponse.json({
      success: true,
      timestamp: new Date().toISOString(),
      mongodb: status,
      recommendations: getRecommendations(status)
    });
  } catch (error) {
    console.error('Erro ao monitorizar MongoDB:', error);
    return NextResponse.json(
      { error: 'Erro ao monitorizar MongoDB' },
      { status: 500 }
    );
  }
}

function getRecommendations(status: any) {
  const recommendations = [];
  
  if (!status.isConnected) {
    recommendations.push('‚ùå MongoDB n√£o est√° conectado - verificar configura√ß√£o');
  }
  
  if (status.readyState === 2) {
    recommendations.push('‚è≥ MongoDB est√° a conectar - aguardar estabiliza√ß√£o');
  }
  
  if (status.readyState === 3) {
    recommendations.push('üîÑ MongoDB est√° a desconectar - verificar se h√° problemas');
  }
  
  if (status.isConnected) {
    recommendations.push('‚úÖ MongoDB est√° est√°vel e conectado');
    recommendations.push('üí° Monitorizar uso de conex√µes no painel MongoDB Atlas');
  }
  
  return recommendations;
}
